// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.4/esri/copyright.txt for details.
//>>built
define(["../../core/Accessor"],function(l){var m=0;return l.createSubclass({constructor:function(){this._deletedGraphicsIndex=new Set;this._intentsIndex=new Map},destroy:function(){this.removeAll();this._intentsIndex=this._deletedGraphicsIndex=null},properties:{graphics:null,indexById:{value:null,dependsOn:["graphics","objectIdField"],get:function(){return this._createIndexById(this.graphics&&this.graphics.toArray(),this.objectIdField)}},numGraphics:{value:0,dependsOn:["indexById"],get:function(){return this.indexById?
this.indexById.size:0}},objectIdField:null},_intentsIndex:null,_oldIndex:null,_deletedGraphicsIndex:null,beginPagedUpdate:function(){this._oldIndex=this.indexById;this.indexById=null;this.notifyChange("numGraphics")},addPage:function(a,b){this.add(a,b)},revertPagedUpdate:function(){var a=this._removeLeftOnly(this.indexById,this._oldIndex);this.indexById=this._oldIndex;this._oldIndex=null;this.graphics.removeMany(a);this.notifyChange("numGraphics")},endPagedUpdate:function(){var a=this._removeLeftOnly(this._oldIndex,
this.indexById);this._oldIndex=null;this.graphics.removeMany(a);this.notifyChange("numGraphics")},findGraphic:function(a){return(a=this.indexById&&this.indexById.get(a))&&a.graphic},removeAll:function(){this.indexById=this._oldIndex=null;this.graphics.removeAll();this.notifyChange("numGraphics")},add:function(a,b){a&&a.length&&(this.indexById=this.indexById||new Map,a=this._updateAndExtractNew(a,this.indexById,this._oldIndex,b),this.graphics.removeMany(a.toRemove),this.graphics.addMany(a.toAdd),this.notifyChange("numGraphics"))},
remove:function(a){this._remove(a,!1)},delete:function(a){this._remove(a,!0)},isDeleted:function(a){return this._deletedGraphicsIndex.has(a)},createIntentToAdd:function(a){a&&this._intentsIndex.forEach(function(b,c){a.forEach(function(a){b.ignoredIds.add(a)})},this);var b=m++;this._intentsIndex.set(b,{ignoredIds:new Set});return b},findIntent:function(a){return this._intentsIndex.get(a)},removeIntent:function(a){this._intentsIndex.delete(a)},_createIndexById:function(a,b){var d;if(a&&a.length&&b){var c,
e,f;d=new Map;for(c=0;e=a[c];c++)f=e.attributes&&e.attributes[b],null!=f&&d.set(f,{graphic:e,refCount:1})}return d},_updateAndExtractNew:function(a,b,d,c){var e=[],f=[],l=a?a.length:0,m=this.objectIdField,n=this.findIntent(c);for(c=0;c<l;c++){var g=a[c],h=g.attributes&&g.attributes[m];if(null!=h){var k=d&&d.get(h);(k=b.get(h)||k)?n&&n.ignoredIds.has(h)||(b.set(h,{graphic:g,refCount:k.refCount+1}),f.push(k.graphic),e.push(g)):this.isDeleted(h)||(b.set(h,{graphic:g,refCount:1}),e.push(g))}else e.push(g)}return{toRemove:f,
toAdd:e}},_remove:function(a,b){a=a||[];a="object"===typeof a[0]?a.map(function(a){return a.attributes&&a.attributes[this.objectIdField]}.bind(this)):a;var d=this._extractGraphics(a,this._oldIndex),c=this._extractGraphics(a,this.indexById);a.forEach(function(a){b&&this._deletedGraphicsIndex.add(a);this._removeFromIndex(a,this._oldIndex,b);this._removeFromIndex(a,this.indexById,b)}.bind(this));this.graphics.removeMany(d.concat(c));this.notifyChange("numGraphics")},_removeFromIndex:function(a,b,d){if(b&&
b.has(a))if(d)b.delete(a);else{d=b.get(a);var c=d.refCount-1;0===c?b.delete(a):d.refCount=c}},_removeLeftOnly:function(a,b){var d=[];a&&a.forEach(function(c,e){var f=c.graphic;!f||b&&b.has(e)||(--c.refCount,0===c.refCount&&a.delete(e),d.push(f))});return d},_extractGraphics:function(a,b){return a&&b?a.map(function(a){return(a=b.get(a))&&a.graphic}):[]}})});