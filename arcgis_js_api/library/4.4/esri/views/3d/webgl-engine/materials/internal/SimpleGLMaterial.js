// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.4/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/internal/SimpleGLMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderSimple"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tattribute vec3 $position;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * vec4((model * vec4($position, 1.0)).xyz, 1.0);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderSimple"\x3e\x3c![CDATA[\r\n\t$fsprecisionf\r\n\r\n\tuniform vec4 color;\r\n\r\n\tvoid main() {\r\n\t\tgl_FragColor \x3d color;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n'}});
define("require exports dojo/text!./SimpleGLMaterial.xml ./MaterialUtil ../../lib/RenderSlot ../../../../webgl/Program ../../../../webgl/enums ../../lib/DefaultVertexAttributeLocations".split(" "),function(l,m,e,c,f,g,n,h){return function(){function b(a,b,k,d){void 0===d&&(d=4);this.id=c.__GLMaterial_id++;this.program=a.get("simple");this.color=b;this.depthFunc=k;this.drawMode=d}b.prototype.getId=function(){return this.id};b.prototype.beginSlot=function(a){return a===f.INTERNAL_MATERIAL};b.prototype.getProgram=
function(){return this.program};b.prototype.bind=function(a,b){a.bindProgram(this.program);this.program.setUniformMatrix4fv("model",c.IDENTITY);this.program.setUniformMatrix4fv("proj",b.proj);this.program.setUniform4fv("color",this.color);a.setBlendingEnabled(!0);a.setBlendFunctionSeparate(a.gl.SRC_ALPHA,a.gl.ONE_MINUS_SRC_ALPHA,a.gl.ONE,a.gl.ONE_MINUS_SRC_ALPHA);a.setDepthTestEnabled(!0);void 0!==this.depthFunc&&a.setDepthFunction(this.depthFunc)};b.prototype.release=function(a){void 0!==this.depthFunc&&
a.setDepthFunction(513);a.setBlendingEnabled(!1)};b.prototype.bindView=function(a,b){c.bindView(b.origin,b.view,this.program)};b.prototype.bindInstance=function(a,b){this.program.setUniformMatrix4fv("model",b.transformation)};b.prototype.getDrawMode=function(a){return this.drawMode};b.loadShaders=function(a,b,c,d){a._parse(e);a=new g(d,a.vertexShaderSimple,a.fragmentShaderSimple,h.Default3D);c.add("simple",a)};return b}()});