// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.4/esri/copyright.txt for details.
//>>built
define(["../../core/Accessor","../../core/kebabDictionary","../../geometry/support/jsonUtils","dojo/_base/array"],function(c,g,e,f){var h=g({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",
esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});return c.createSubclass({declaredClass:"esri.tasks.support.RelationParameters",properties:{geometries1:null,geometries2:null,relation:null,relationParam:null},toJSON:function(){var a=f.map(this.geometries1,function(a){return a.toJSON()}),c=f.map(this.geometries2,function(a){return a.toJSON()}),b={},d=this.geometries1;d&&0<d.length&&(b.geometries1=JSON.stringify({geometryType:e.getJsonType(d[0]),
geometries:a}),a=this.geometries1[0].spatialReference,b.sr=a.wkid?a.wkid:JSON.stringify(a.toJSON()));(a=this.geometries2)&&0<a.length&&(b.geometries2=JSON.stringify({geometryType:e.getJsonType(a[0]),geometries:c}));this.relation&&(b.relation=h.toJSON(this.relation));this.relationParam&&(b.relationParam=this.relationParam);return b}})});